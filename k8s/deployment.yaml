# MySQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: default
data:
  MYSQL_ROOT_PASSWORD: "password"
  MYSQL_DATABASE: "todoapp"

---
# MySQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: default
type: Opaque
data:
  # password base64 encoded
  mysql-root-password: cGFzc3dvcmQ=

---
# MySQL PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-rwo

---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_DATABASE
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - localhost
            - -u
            - root
            - -ppassword
            - -e
            - SELECT 1
          initialDelaySeconds: 5
          periodSeconds: 2
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: default
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP

---
# FastAPI ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: fastapi-config
  namespace: default
data:
  DATABASE_URL: "mysql+pymysql://root:password@mysql-service:3306/todoapp"

---
# FastAPI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi-todo
  template:
    metadata:
      labels:
        app: fastapi-todo
    spec:
      containers:
      - name: fastapi-todo
        image: asia-southeast1-docker.pkg.dev/verdant-bruin-464819-i9/fastapi-todoapp/fastapi-todoapp:v1
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: fastapi-config
              key: DATABASE_URL
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: wait-for-mysql
        image: mysql:8.0
        command: ['sh', '-c']
        args:
        - |
          until mysql -h mysql-service -u root -ppassword -e "SELECT 1;" > /dev/null 2>&1; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done
          echo "MySQL is ready and accepting connections!"

---
# FastAPI Service
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: default
spec:
  selector:
    app: fastapi-todo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer

---
# Horizontal Pod Autoscaler for FastAPI
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80